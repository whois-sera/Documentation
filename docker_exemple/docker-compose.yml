version: '3.7'

networks:
  exemple:

services:

  nginx:
    image: nginx:stable
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - exemple

  mysql:
    image: mysql:latest
    restart: unless-stopped
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: exemple
      MYSQL_DATABASE: exemple
      MYSQL_USER: exemple
      MYSQL_PASSWORD: exemple
    volumes:
      - ./docker/mysql:/var/lib/mysql
    networks:
      - exemple

  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: sonarqube
      POSTGRES_PASSWORD: sonarqube
      POSTGRES_DB: sonarqube
    volumes:
        - postgres:/var/lib/postgresql/data #Docker Managed Storage :(
    networks:
      - exemple

  sonarqube:
    image: sonarqube:7.7-community
    restart: always
    depends_on: 
      - postgres
    ports:
      - 9900:9000
    environment:
      - SONARQUBE_JDBC_USERNAME=sonarqube
      - SONARQUBE_JDBC_PASSWORD=sonarqube
      - SONARQUBE_JDBC_URL=jdbc:postgresql://postgres/sonarqube
    volumes:
      - ./docker/sonarconf:/opt/sonarqube/conf
      - ./docker/sonardata:/opt/sonarqube/data
      - ./docker/sonarlogs:/opt/sonarqube/logs
      - ./docker/sonarext:/opt/sonarqube/extensions
    networks:
      - exemple

  php:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    volumes:
      - ./src:/var/www/html
    ports:
      - "9000:9000"
    networks:
      - exemple

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    restart: unless-stopped
    ports:
    - 8800:80
    environment:
      PMA_PASSWORD: serveur
      MYSQL_ROOT_PASSWORD: serveur
      MYSQL_PASSWORD: serveur
      PMA_HOSTS: mysql
    networks:
      - exemple

  composer:
    image: composer:latest
    command: composer install
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    networks:
      - exemple

  npm:
    image: node:latest
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']

  artisan:
    build:
    context: ./docker/php
    dockerfile: Dockerfile
    volumes:
      - ./src:/var/www/html
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['/var/www/html/artisan']
    networks:
      - exemple